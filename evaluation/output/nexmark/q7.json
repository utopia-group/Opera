{
  "solution": "\\prev_out prev_i prev_highest_bids x__ -> (let S = {} in let S = let S = S{i = (prev_i); highest_bids = prev_highest_bids} in S{i = int((python(b['dateTime'].timestamp()) / window_size)); highest_bids = if python(i not in highest_bids or b['price'] > highest_bids[i]['price']) then python({**highest_bids, i: {'auction': b['auction'], 'bidder': b['bidder'], 'price': b['price'], 'dateTime': b['dateTime'], 'extra': b['extra']}}) else highest_bids} in python(highest_bids.values()), (S[i], S[highest_bids]))",
  "qe_time": 0.0003650188446044922,
  "syn_time": 0.004279136657714844,
  "parse_time": 0.0047817230224609375,
  "test_time": 3.0835163593292236,
  "total_time": 3.0929532051086426,
  "num_exprs_to_synthesize": 2,
  "exprs_sizes": [
    43,
    0
  ],
  "offline_ast_size": 45,
  "online_ast_size": 47
}