{
  "solution": "\\prev_out prev_day prev_results x__ -> (let S = {} in let S = let S = S{day = prev_day; results = prev_results} in S{day = (python(bid['dateTime'].day), python(bid['dateTime'].month), python(bid['dateTime'].year)); results = python({**results, day: {'total_bids': results.get(day, default_dict)['total_bids'] + 1, 'rank1_bids': results.get(day, default_dict)['rank1_bids'] + 1 if bid['price'] < 10000 else results.get(day, default_dict)['rank1_bids'], 'rank2_bids': results.get(day, default_dict)['rank2_bids'] + 1 if bid['price'] >= 10000 and bid['price'] < 1000000 else results.get(day, default_dict)['rank2_bids'], 'rank3_bids': results.get(day, default_dict)['rank3_bids'] + 1 if bid['price'] >= 1000000 else results.get(day, default_dict)['rank3_bids'], 'total_bidders': results.get(day, default_dict)['total_bidders'].union({bid['bidder']}), 'rank1_bidders': results.get(day, default_dict)['rank1_bidders'].union({bid['bidder']}) if bid['price'] < 10000 else results.get(day, default_dict)['rank1_bidders'], 'rank2_bidders': results.get(day, default_dict)['rank2_bidders'].union({bid['bidder']}) if bid['price'] >= 10000 and bid['price'] < 1000000 else results.get(day, default_dict)['rank2_bidders'], 'rank3_bidders': results.get(day, default_dict)['rank3_bidders'].union({bid['bidder']}) if bid['price'] >= 1000000 else results.get(day, default_dict)['rank3_bidders'], 'total_auctions': results.get(day, default_dict)['total_auctions'].union({bid['auction']}), 'rank1_auctions': results.get(day, default_dict)['rank1_auctions'].union({bid['auction']}) if bid['price'] < 10000 else results.get(day, default_dict)['rank1_auctions'], 'rank2_auctions': results.get(day, default_dict)['rank2_auctions'].union({bid['auction']}) if bid['price'] >= 10000 and bid['price'] < 1000000 else results.get(day, default_dict)['rank2_auctions'], 'rank3_auctions': results.get(day, default_dict)['rank3_auctions'].union({bid['auction']}) if bid['price'] >= 1000000 else results.get(day, default_dict)['rank3_auctions']}})} in python({day: {'total_bids': dicts['total_bids'], 'rank1_bids': dicts['rank1_bids'], 'rank2_bids': dicts['rank2_bids'], 'rank3_bids': dicts['rank3_bids'], 'total_bidders': len(dicts['total_bidders']), 'rank1_bidders': len(dicts['rank1_bidders']), 'rank2_bidders': len(dicts['rank2_bidders']), 'rank3_bidders': len(dicts['rank3_bidders']), 'total_auctions': len(dicts['total_auctions']), 'rank1_auctions': len(dicts['rank1_auctions']), 'rank2_auctions': len(dicts['rank2_auctions']), 'rank3_auctions': len(dicts['rank3_auctions'])} for day, dicts in results.items()}), (S[day], S[results]))",
  "qe_time": 0.0003726482391357422,
  "syn_time": 0.007051944732666016,
  "parse_time": 0.012165546417236328,
  "test_time": 11.681923866271973,
  "total_time": 11.701529741287231,
  "num_exprs_to_synthesize": 2,
  "exprs_sizes": [
    268,
    0
  ],
  "offline_ast_size": 324,
  "online_ast_size": 305
}