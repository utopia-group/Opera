{
  "solution": "\\prev_out prev_var0 x__ -> (let S = {} in let S = let S = prev_var0 in let S = foldl(\\S y -> S{new_bid = if python(x['auction'] == y['id'] and y['category'] > 2) then python([*new_bid, {'auction': x['auction'], 'bidder': x['bidder'], 'price': x['price'], 'channel': x['channel'], 'url': x['url'], 'bid_dateTime': x['dateTime'], 'bid_extra': x['extra'], 'itemName': y['itemName'], 'description': y['description'], 'initialBid': y['initialBid'], 'reserve': y['reserve'], 'auction_dateTime': y['dateTime'], 'expires': y['expires'], 'seller': y['seller'], 'category': y['category'], 'auction_extra': y['extra']}]) else new_bid}, S{}, auction) in S in S[new_bid], (prev_var0))",
  "qe_time": 0.0003552436828613281,
  "syn_time": 0.0024237632751464844,
  "parse_time": 0.009280681610107422,
  "test_time": 37.674283027648926,
  "total_time": 37.68635177612305,
  "num_exprs_to_synthesize": 1,
  "exprs_sizes": [
    73
  ],
  "offline_ast_size": 74,
  "online_ast_size": 73
}